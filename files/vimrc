execute pathogen#infect()

filetype plugin on

if has("syntax")
  syntax on
endif


" Use softtabs
set tabstop=4 softtabstop=4 shiftwidth=4 expandtab
retab


" Simplify window movement
map <c-h> <c-w>h
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l


" Toggle File Explorer
noremap <c-n> :Lex<cr>


" Misc settings
silent! colorscheme desert
set number
set splitright
set ruler


" Use space to recursively toggle folds
" noremap <space> zA


" Uncomment the following to have Vim jump to the last position when
" reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
if has("autocmd")
  filetype plugin indent on
endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd     " Show (partial) command in status line.
set showmatch       " Show matching brackets.
"set ignorecase     " Do case insensitive matching
"set smartcase      " Do smart case matching
"set incsearch      " Incremental search
"set autowrite      " Automatically save before commands like :next and :make
"set hidden     " Hide buffers when they are abandoned
"set mouse=a        " Enable mouse usage (all modes)

" Source a global configuration file if available
" if filereadable("/etc/vim/vimrc.local")
"   source /etc/vim/vimrc.local
" endif


" function Repl()
"     :vsplit .scratch
"     :map <Leader>r <c-w>hgg"qyG<c-w>lggdG:read !q<CR>gg"qdd<c-w>h
"     :normal \r
" endfunction
" map <Leader>r :call Repl()<CR>

function Repl()
    :vsplit .scratch
    :map <Leader>r <c-w>hgg"qyG<c-w>lggdG:read !q<CR><CR>gg"qdd<c-w>h
    :normal \r
endfunction
map <Leader>r :call Repl()<CR>

" source /Users/chrisr/.vimdiffcolors.vim

" Change cursor shape between insert and normal mode in iTerm2.app
if $TERM_PROGRAM =~ "iTerm.app"
    let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
    let &t_EI = "\<Esc>]50;CursorShape=2\x7" " Underscore in normal mode
endif

set backspace=2 " make backspace work like most other programs

" toggle line numbers
map <Leader>n :set number!<CR>

" toggle paste
map <Leader>p :set paste!<CR>

" toggle wrap
map <Leader>w :set wrap!<CR>

" toggle cursorcolumn
map <Leader>c :set cursorcolumn!<CR>

" format xml with CTRL+x
map <c-x> :!python3 -c 'import sys;import xml.dom.minidom;s=sys.stdin.read();print(xml.dom.minidom.parseString(s).toprettyxml())'<CR>

" format json with CTRL+j
map <c-j> :!python3 -m json.tool<CR>

" wrap paragraphs with CTRL+w. Use `:set tw=<WIDTH>` to set wrap point, e.g.
" `set tw=79`
map <c-w> gq
